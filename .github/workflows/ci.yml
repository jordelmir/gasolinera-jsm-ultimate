name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          cache-read-only: ${{ github.event_name == 'pull_request' }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test affected projects
        run: npm run affected:test -- --base=origin/main

      - name: Build affected projects
        run: npm run affected:build -- --base=origin/main

  # New job for OpenAPI client generation and validation
  openapi-clients:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          cache-read-only: ${{ github.event_name == 'pull_request' }}

      - name: Generate OpenAPI specifications
        run: ./gradlew generateAllOpenApiSpecs --continue
        continue-on-error: true

      - name: Generate API clients
        run: ./gradlew generateAllClients --continue

      - name: Validate generated clients
        run: ./gradlew validateAllClients

      - name: Check client generation status
        run: ./gradlew checkGeneratedClientsUpToDate

      - name: Upload generated clients as artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: generated-api-clients
          path: build/generated/
          retention-days: 7

      - name: Upload OpenAPI specifications
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: openapi-specifications
          path: services/*/openapi.yaml
          retention-days: 30

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        run: make build-all

  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
